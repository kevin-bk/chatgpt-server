version: '3.8'
services:
    nginx:
        image: rogerdz/nginx
        labels:
            - traefik.enable=true

            # HTTP traffic
            - traefik.http.routers.nginx-${COMPOSE_PROJECT_NAME}.rule=Host(`${VIRTUAL_HOST}`)
            - traefik.http.routers.nginx-${COMPOSE_PROJECT_NAME}.entrypoints=http
            - traefik.http.routers.nginx-${COMPOSE_PROJECT_NAME}.service=nginx-${COMPOSE_PROJECT_NAME}
            - traefik.http.services.nginx-${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=80

            # HTTPS traffic
            - traefik.http.routers.nginx-${COMPOSE_PROJECT_NAME}-https.rule=Host(`${VIRTUAL_HOST}`)
            - traefik.http.routers.nginx-${COMPOSE_PROJECT_NAME}-https.entrypoints=https
            # - traefik.http.services.nginx-${COMPOSE_PROJECT_NAME}-https.loadbalancer.server.port=80
            - traefik.http.routers.nginx-${COMPOSE_PROJECT_NAME}-https.service=nginx-${COMPOSE_PROJECT_NAME}-https
            - traefik.http.services.nginx-${COMPOSE_PROJECT_NAME}-https.loadbalancer.server.port=443
            - traefik.http.services.nginx-${COMPOSE_PROJECT_NAME}-https.loadbalancer.server.scheme=https

            # Redirect all http requests to https
            # - traefik.http.routers.nginx-${COMPOSE_PROJECT_NAME}.middlewares=https-redirect@file
        networks:
            proxy:
            internal:
        environment:
            UID: ${UID:-1000}
            GID: ${GID:-1000}
            WORK_DIR: ${WORK_DIR}
            VIRTUAL_HOST: ${VIRTUAL_HOST}
            APP_PORT: ${APP_PORT}
            CONTAINER_NAME: ${CONTAINER_NAME}
        volumes:
            - ./nginx-sites.conf:/etc/nginx/templates/default.conf.template
            - ${WORK_DIR}:${WORK_DIR}:cached
        restart: &restart unless-stopped
        logging: &logging
            options:
                max-size: "10m"
                max-file: "3"
    nodejs:
        build: ./build/node
        container_name: ${CONTAINER_NAME}
        working_dir: ${WORK_DIR}
        volumes:
            - ${WORK_DIR}:${WORK_DIR}
        ports:
            - "127.0.0.1:3001:3001"
        environment:
            UID: ${UID:-1000}
            GID: ${GID:-1000}
            WORK_DIR: ${WORK_DIR}
            COMMAND: pm2 start ${INDEX_FILE}
        tty: true
        restart: unless-stopped
        networks:
            proxy:
            internal:
networks:
    proxy:
        external: true
    gateway:
        external: true
    internal:
        driver: bridge
